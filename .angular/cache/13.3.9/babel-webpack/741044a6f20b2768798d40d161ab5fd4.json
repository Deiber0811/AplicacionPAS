{"ast":null,"code":"import _classCallCheck from \"/home/deibermcl/AplicacionPAS/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/deibermcl/AplicacionPAS/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { __decorate, __metadata } from \"tslib\";\nimport { Component } from '@angular/core';\n\nvar DashboardComponent = /*#__PURE__*/function () {\n  function DashboardComponent() {\n    _classCallCheck(this, DashboardComponent);\n  } // events\n\n\n  _createClass(DashboardComponent, [{\n    key: \"chartClicked\",\n    value: function chartClicked(e) {\n      console.log(e);\n    }\n  }, {\n    key: \"chartHovered\",\n    value: function chartHovered(e) {\n      console.log(e);\n    }\n  }, {\n    key: \"hexToRGB\",\n    value: function hexToRGB(hex, alpha) {\n      var r = parseInt(hex.slice(1, 3), 16),\n          g = parseInt(hex.slice(3, 5), 16),\n          b = parseInt(hex.slice(5, 7), 16);\n\n      if (alpha) {\n        return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\n      } else {\n        return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n      }\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      // Line General - Header\n      this.chartColor = \"#dce0e8\";\n      this.canvas = document.getElementById(\"bigDashboardChart\");\n      this.ctx = this.canvas.getContext(\"2d\");\n      this.gradientStroke = this.ctx.createLinearGradient(500, 0, 100, 0);\n      this.gradientStroke.addColorStop(0, '#80b6f4');\n      this.gradientStroke.addColorStop(1, this.chartColor);\n      this.gradientFill = this.ctx.createLinearGradient(0, 200, 0, 43); // Gradient General\n\n      this.gradientFill.addColorStop(0, \"rgba(64, 160, 43, 0)\");\n      this.gradientFill.addColorStop(1, \"rgba(64, 160, 43, 0.24)\");\n      this.lineBigDashboardChartData = [{\n        label: \"Data\",\n        pointBorderWidth: 1,\n        pointHoverRadius: 7,\n        pointHoverBorderWidth: 2,\n        pointRadius: 5,\n        fill: true,\n        borderWidth: 2,\n        data: [50, 150, 100, 190, 130, 90, 150, 160, 120, 140, 190, 95]\n      }];\n      this.lineBigDashboardChartColors = [{\n        backgroundColor: this.gradientFill,\n        borderColor: this.chartColor,\n        pointBorderColor: this.chartColor,\n        // Colors dots General\n        pointBackgroundColor: \"#40a02b\",\n        pointHoverBackgroundColor: \"#40a02b\",\n        pointHoverBorderColor: this.chartColor\n      }];\n      this.lineBigDashboardChartLabels = [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"];\n      this.lineBigDashboardChartOptions = {\n        layout: {\n          padding: {\n            left: 20,\n            right: 20,\n            top: 0,\n            bottom: 0\n          }\n        },\n        maintainAspectRatio: false,\n        tooltips: {\n          backgroundColor: '#fff',\n          titleFontColor: '#333',\n          bodyFontColor: '#666',\n          bodySpacing: 4,\n          xPadding: 12,\n          mode: \"nearest\",\n          intersect: 0,\n          position: \"nearest\"\n        },\n        legend: {\n          position: \"bottom\",\n          fillStyle: \"#FFF\",\n          display: false\n        },\n        scales: {\n          yAxes: [{\n            ticks: {\n              fontColor: \"rgba(220, 224, 232, 0.4)\",\n              fontStyle: \"bold\",\n              beginAtZero: true,\n              maxTicksLimit: 5,\n              padding: 10\n            },\n            gridLines: {\n              drawTicks: true,\n              drawBorder: false,\n              display: true,\n              color: \"rgba(220, 224, 232,0.1)\",\n              zeroLineColor: \"transparent\"\n            }\n          }],\n          xAxes: [{\n            gridLines: {\n              zeroLineColor: \"transparent\",\n              display: false\n            },\n            ticks: {\n              padding: 10,\n              fontColor: \"rgba(220, 224, 232,0.4)\",\n              fontStyle: \"bold\"\n            }\n          }]\n        }\n      };\n      this.lineBigDashboardChartType = 'line';\n      this.gradientChartOptionsConfiguration = {\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        tooltips: {\n          bodySpacing: 4,\n          mode: \"nearest\",\n          intersect: 0,\n          position: \"nearest\",\n          xPadding: 10,\n          yPadding: 10,\n          caretPadding: 10\n        },\n        responsive: 1,\n        scales: {\n          yAxes: [{\n            display: 0,\n            ticks: {\n              display: false\n            },\n            gridLines: {\n              zeroLineColor: \"transparent\",\n              drawTicks: false,\n              display: false,\n              drawBorder: false\n            }\n          }],\n          xAxes: [{\n            display: 0,\n            ticks: {\n              display: false\n            },\n            gridLines: {\n              zeroLineColor: \"transparent\",\n              drawTicks: false,\n              display: false,\n              drawBorder: false\n            }\n          }]\n        },\n        layout: {\n          padding: {\n            left: 0,\n            right: 0,\n            top: 15,\n            bottom: 15\n          }\n        }\n      };\n      this.gradientChartOptionsConfigurationWithNumbersAndGrid = {\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        tooltips: {\n          bodySpacing: 4,\n          mode: \"nearest\",\n          intersect: 0,\n          position: \"nearest\",\n          xPadding: 10,\n          yPadding: 10,\n          caretPadding: 10\n        },\n        responsive: true,\n        scales: {\n          yAxes: [{\n            gridLines: {\n              zeroLineColor: \"transparent\",\n              drawBorder: false\n            },\n            ticks: {\n              stepSize: 500\n            }\n          }],\n          xAxes: [{\n            display: 0,\n            ticks: {\n              display: false\n            },\n            gridLines: {\n              zeroLineColor: \"transparent\",\n              drawTicks: false,\n              display: false,\n              drawBorder: false\n            }\n          }]\n        },\n        layout: {\n          padding: {\n            left: 0,\n            right: 0,\n            top: 15,\n            bottom: 15\n          }\n        }\n      };\n      this.canvas = document.getElementById(\"lineChartExample\");\n      this.ctx = this.canvas.getContext(\"2d\");\n      this.gradientStroke = this.ctx.createLinearGradient(500, 0, 100, 0);\n      this.gradientStroke.addColorStop(0, '#C6C581');\n      this.gradientStroke.addColorStop(1, this.chartColor);\n      this.gradientFill = this.ctx.createLinearGradient(0, 170, 0, 50); // Gradient - All Rooms\n\n      this.gradientFill.addColorStop(0, \"rgba(4, 165, 229, 0)\");\n      this.gradientFill.addColorStop(1, \"rgba(4, 165, 229, 0.40)\");\n      this.lineChartData = [{\n        label: \"CONSUMO POR MES\",\n        pointBorderWidth: 2,\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 1,\n        pointRadius: 4,\n        fill: true,\n        borderWidth: 2,\n        data: [542, 480, 430, 550, 530, 453, 380, 434, 568, 610, 700, 630]\n      }];\n      this.lineChartColors = [{\n        // Color Line - All Rooms\n        borderColor: \"#5c5f77\",\n        pointBorderColor: \"#FFF\",\n        // Colors dots - All Rooms\n        pointBackgroundColor: \"#04a5e5\",\n        backgroundColor: this.gradientFill\n      }];\n      this.lineChartLabels = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      this.lineChartOptions = this.gradientChartOptionsConfiguration;\n      this.lineChartType = 'line';\n      this.canvas = document.getElementById(\"lineChartExampleWithNumbersAndGrid\");\n      this.ctx = this.canvas.getContext(\"2d\");\n      this.gradientStroke = this.ctx.createLinearGradient(500, 0, 100, 0);\n      this.gradientStroke.addColorStop(0, '#18ce0f');\n      this.gradientStroke.addColorStop(1, this.chartColor);\n      this.gradientFill = this.ctx.createLinearGradient(0, 170, 0, 50); // Color Gradient - Room 1\n\n      this.gradientFill.addColorStop(0, \"rgba(136, 57, 239, 0)\");\n      this.gradientFill.addColorStop(1, \"rgba(136, 57, 239, 0.4)\");\n      this.lineChartWithNumbersAndGridData = [{\n        label: \"Consumption\",\n        pointBorderWidth: 2,\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 1,\n        pointRadius: 4,\n        fill: true,\n        borderWidth: 2,\n        data: [40, 500, 650, 700, 1200, 1250, 1300, 1900]\n      }];\n      this.lineChartWithNumbersAndGridColors = [{\n        // Color Line - Room 1\n        borderColor: \"#5c5f77\",\n        pointBorderColor: \"#FFF\",\n        // Color Dots = Room 1\n        pointBackgroundColor: \"#8839ef\",\n        backgroundColor: this.gradientFill\n      }];\n      this.lineChartWithNumbersAndGridLabels = [\"12pm,\", \"3pm\", \"6pm\", \"9pm\", \"12am\", \"3am\", \"6am\", \"9am\"];\n      this.lineChartWithNumbersAndGridOptions = this.gradientChartOptionsConfigurationWithNumbersAndGrid;\n      this.lineChartWithNumbersAndGridType = 'line';\n      this.canvas = document.getElementById(\"barChartSimpleGradientsNumbers\");\n      this.ctx = this.canvas.getContext(\"2d\");\n      this.gradientFill = this.ctx.createLinearGradient(0, 170, 0, 50);\n      this.gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\n      this.gradientFill.addColorStop(1, this.hexToRGB('#2CA8FF', 0.6));\n      this.lineChartGradientsNumbersData = [{\n        label: \"Consumption\",\n        pointBorderWidth: 2,\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 1,\n        pointRadius: 4,\n        fill: true,\n        borderWidth: 1,\n        data: [80, 99, 86, 96, 123, 85, 100, 75, 88, 90, 123, 155]\n      }];\n      this.lineChartGradientsNumbersColors = [{\n        backgroundColor: this.gradientFill,\n        borderColor: \"#2CA8FF\",\n        pointBorderColor: \"#FFF\",\n        pointBackgroundColor: \"#2CA8FF\"\n      }];\n      this.lineChartGradientsNumbersLabels = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      this.lineChartGradientsNumbersOptions = {\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        tooltips: {\n          bodySpacing: 4,\n          mode: \"nearest\",\n          intersect: 0,\n          position: \"nearest\",\n          xPadding: 10,\n          yPadding: 10,\n          caretPadding: 10\n        },\n        responsive: 1,\n        scales: {\n          yAxes: [{\n            gridLines: {\n              zeroLineColor: \"transparent\",\n              drawBorder: false\n            },\n            ticks: {\n              stepSize: 20\n            }\n          }],\n          xAxes: [{\n            display: 0,\n            ticks: {\n              display: false\n            },\n            gridLines: {\n              zeroLineColor: \"transparent\",\n              drawTicks: false,\n              display: false,\n              drawBorder: false\n            }\n          }]\n        },\n        layout: {\n          padding: {\n            left: 0,\n            right: 0,\n            top: 15,\n            bottom: 15\n          }\n        }\n      };\n      this.lineChartGradientsNumbersType = 'bar';\n    }\n  }]);\n\n  return DashboardComponent;\n}();\n\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n}), __metadata(\"design:paramtypes\", [])], DashboardComponent);\nexport { DashboardComponent };","map":null,"metadata":{},"sourceType":"module"}